{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    
    "parameters": {
        "prefixName": {
            "type": "string",
            "defaultValue": "z1",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Name prefix between 3-6 characters with only characters and numbers"
            }
        },
        "AllowAll": {
            "type": "string",
            "allowedValues": [
                "true",
                "false"
            ],
            "defaultValue": "false"
        }
    },

    "variables": {
        "subscriptionId": "[subscription().subscriptionId]",
        "location": "[resourceGroup().location]",
        "rgId": "[resourceGroup().id]",
        "rgName": "[resourceGroup().name]",

        "tenantId": "[subscription().tenantId]",
        "paramName": "[parameters('prefixName')]",
        "storageContainer": "data",

        "uniqueName": "[substring(uniqueString(variables('rgId')),0,4)]",
        
        "synapseWorkspaceName": "[concat('synapse-ws-',variables('paramName'))]",
        "storageName": "[replace(replace(toLower(concat(concat('synapsestrg',variables('paramName')),variables('uniqueName'))),'-',''),'_','')]",
        
        "machinelearningName": "[concat('ml-', variables('paramName'))]",
        "storageMLname": "[replace(replace(toLower(concat(concat('mlstrg',variables('paramName')),variables('uniqueName'))),'-',''),'_','')]",
        
        "appinsightsname": "[concat(variables('machinelearningName'), 'ai')]",
        "keyvaultname": "[replace(replace(toLower(concat('keyvault',variables('paramName'))),'-',''),'_','')]",
		"keyvaultname": "[replace(replace(toLower(concat(concat('keyvault',variables('paramName')),variables('uniqueName'))),'-',''),'_','')]",
        
        "StorageBlobDataContributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
    },

    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default/', variables('storageContainer'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default/', 'ciexport')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2020-12-01",
            "name": "[variables('synapseWorkspaceName')]",
            "location": "[variables('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "accountUrl": "[concat('https://', variables('storageName') , '.dfs.core.windows.net')]",
                    "filesystem": "[variables('storageContainer')]"
                },
                "virtualNetworkProfile": {
                    "computeSubnetId": ""
                },
                "sqlAdministratorLogin": "sqladminuser"
            },
            "resources": [
                {
                    "condition": "[equals(parameters('AllowAll'),'true')]",
                    "type": "firewallrules",
                    "apiVersion": "2019-06-01-preview",
                    "name": "allowAll",
                    "location": "[variables('location')]",
                    "dependsOn": [ "[variables('synapseWorkspaceName')]" ],
                    "properties": {
                      "startIpAddress": "0.0.0.0",
                      "endIpAddress": "255.255.255.255"
                    }
                  }
            ]
        },
        {
            "type": "Microsoft.Synapse/workspaces/bigDataPools",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('synapseWorkspaceName'), '/spark1')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('synapseWorkspaceName'))]"
            ],
            "properties": {
                "sparkVersion": "2.4",
                "nodeCount": 3,
                "nodeSize": "Medium",
                "nodeSizeFamily": "MemoryOptimized",
                "autoScale": {
                    "enabled": true,
                    "minNodeCount": 3,
                    "maxNodeCount": 6
                },
                "autoPause": {
                    "enabled": true,
                    "delayInMinutes": 15
                },
                "isComputeIsolationEnabled": false,
                "sessionLevelPackagesEnabled": false,
                "cacheSize": 0,
                "dynamicExecutorAllocation": {
                    "enabled": true
                },
                "provisioningState": "Succeeded"
            }
        },
        
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('appinsightsName')]",
            "location": "[variables('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('keyvaultName')]",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[variables('tenantId')]",
                "accessPolicies": [
                ],
                "enabledForDeployment": false,
                "enableSoftDelete": true,
                "enablePurgeProtection": true,
                "vaultUri": "[concat('https://', variables('keyvaultName'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-01-01",
            "name": "[variables('storageMLName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2021-01-01",
            "name": "[variables('machinelearningName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageMLname'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultname'))]",
                "[resourceId('microsoft.insights/components', variables('appinsightsname'))]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "friendlyName": "[variables('machinelearningName')]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageMLname'))]",
                "keyVault": "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultname'))]",
                "applicationInsights": "[resourceId('microsoft.insights/components', variables('appinsightsname'))]",
                "hbiWorkspace": false,
                "allowPublicAccessWhenBehindVnet": false
            }
        },
        {
            "scope": "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[guid(uniqueString(variables('storageName')))]",
            "location": "[variables('location')]",
            "dependsOn": [
              "[variables('synapseWorkspaceName')]"
            ],
            "properties": {
              "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('StorageBlobDataContributor'))]",
              "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', variables('synapseWorkspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
              "principalType": "ServicePrincipal"
            }
        },
        { 
            "apiVersion": "2020-10-01",
            "name": "pid-7d4bca09-1beb-50cd-b4f9-13c3872d3591",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        }
    ]
}